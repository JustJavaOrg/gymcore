services:
  postgres:
    image: postgres:17.4-alpine
    container_name: gym-postgres
    environment:
      POSTGRES_DB: gymdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      PG_INIT_SCRIPT: /docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - gym_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  keycloak:
    image: keycloak/keycloak:latest
    container_name: gym-keycloak

    networks:
      - gym_network
    environment:
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KEYCLOAK_SSL_REQUIRED: none
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://gym-postgres/gymdb
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_DB_INITIALIZE: true  # Force table creation
      KC_DB_SCHEMA: gym_keycloak    # Default PostgreSQL schema
      JGROUPS_DISABLE_JDBC_PING: true  # Disable problematic cluster ping
    ports:
      - "8100:8080"
      - "9000:9000"
    command: ["start", "--verbose"]
#      - start-dev
#      - start
    depends_on:
      postgres:
        condition: service_healthy



volumes:
  pgdata:

networks:
  gym_network:
    driver: bridge


